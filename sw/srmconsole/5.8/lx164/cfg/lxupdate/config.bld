# file: lxupdate_files.bld --  LFU utility build file for AlphaPC 164LX.

# start include of cp$src:lx164_files.bld (depth 1)
#
# file: lx164_files.bld - build file for AlphaPC 164/LX SRM Console firmware
#
# start include of cp$src:options.bld (depth 2)
# options.bld
#
# This file defines the options which are used in the common console build
# environment.  An include file is created for each option in cp$inc.  If
# the option is defined but not invoked, the include file will set the option
# to 0.
#

#
# ALPHA_CONSOLE is always defined.  Use for conditionalizing sources which are
# built in environments other than the common console build environment.
#
define option ALPHA_CONSOLE	# To prevent warning
option ALPHA_CONSOLE

#
# Platform options
#
define option ALCOR		# Alcor Rom based image
define option ALLOAD		# Alcor loadable image
define option ALMIN		# Alcor minimum image ... srom console port
define option ALUPDATE		# Alcor update image
define option COMMON		# Common to all platforms
define option EB164		# EB164 ROM image
define option EB164LOAD		# EB164 loadable image
define option EB164MIN		# EB164 small image
define option SX164		# AlphaPC 164SX Rom based image
define option SXUPDATE		# AlphaPC 164SX Update image
define option LX164		# AlphaPC 164LX Rom based image
define option LXUPDATE		# AlphaPC 164LX Update image
define option PC264		# AlphaPC 264 Rom based image
define option DPUPDATE		# AlphaPC 264DP Update image
define option WEBBRICK		# Webbrick Rom based image
define option WBUPDATE		# Webbrick update image
define option APC_PLATFORM	# All inclusive tag for EBxxx platforms
define option MEDULLA		# AXPvme's
define option MEDULLAUPDATE	# AXPvme CD update build file
define option MINTT		# mintt is in use
define option K2		# DMCC K2 System
define option K2LOAD		# K2 exerciser image
define option K2UPDATE		# K2 update utility
define option TAKARA		# DMCC Takara System
define option TKLOAD		# Takara exerciser image
define option TKUPDATE		# Takara update utility
define option EIGER		# DMCC Eiger System
define option EILOAD		# Eiger exerciser image
define option EIUPDATE		# Eiger update utility
define option AVANTI
define option AVLOAD		# Avanti big image
define option AVMIN		# minimum avanti/mustang image.
define option MIKASA		# Mikasa Base Console Image
define option MKLOAD		# Mikasa Loadable Image
define option MKUPDATE		# Mikasa update image
define option MTU		# MTU (MulTia Unix) basic image
define option MTULOAD		# MTU (MulTia Unix) full image
define option NORITAKE		# Noritake Base Console Image
define option NRLOAD		# Noritake Loadable Image
define option NRUPDATE		# Noritake update image
define option PINNACLE		# Pinnacle (EV5)
define option PKUPDATE		# Pinnacle-Mikasa update image
define option PTUPDATE		# Pinnacle-Noritake update image
define option PINKASA		# Pinnacle (EV5-Mikasa)
define option PINTAKE		# Pinnacle (EV5-Noritake)
define option PRIMCOR		# Primo/Pinnacle (PINTAKE) Alcor varient
define option PAUPDATE		# Primo/Pinnacle (PINTAKE) Alcor update image
define option CRLOAD 		# Corelle ROM image
define option CORELLE		# Corelle ROM image
define option CRUPDATE		# Corelle update image
define option MONET		# Monet ROM image
define option MONETLFU		# Monet LFU image
define option MNUPDATE		# Monet update image 
define option MNLOAD		# Monet Net image 
define option REGATTA		# Regatta family option
define option RGMIN
define option WINDJAMMER	# Windjammer/Warhol ROM image 
define option WJUPDATE		# Windjammer/Warhol update image
define option CLIPPER		# Clipper ROM image 
define option CLUNIX		# Clipper UNIX performance image
define option CLUPDATE		# Clipper update image
define option CLMIN		# Clipper min image(I/O through EV serial port)
define option CLLOAD		# Clipper big image
define option TURBO
define option TL6		# TurboLaser EV6
define option TL67		# TurboLaser EV67
define option SECURE
define option SABLE
define option SBUPDATE		# Sable update image
define option SBLOAD		# Sable big image
define option SBFSAFE		# Sable fail safe image
define option SBMIN		# Sable TDD small image
define option SBQV		# Sable Memory QV image
define option GAMMA
define option GMUPDATE		# Gamma update image
define option GMLOAD		# Gamma big image
define option GMFSAFE		# Gamma fail safe image
define option GMMIN		# Gamma TDD small image
define option GMQV		# Gamma Memory QV image
define option RAWHIDE
define option LYNX		# LYNX 
define option SLYNX		# Sable EV4 based Lynx
define option SLUPDATE		# Sable Lynx update image
define option SLLOAD		# Sable Lynx big image
define option SLFSAFE		# Sable Lynx fail safe image
define option GLYNX		# Gamma EV5 based Lynx
define option GLUPDATE		# Gamma Lynx update image
define option GLLOAD		# Gamma Lynx big image
define option GLFSAFE		# Gamma Lynx fail safe image
define option CORTEX		# Cortex normal rom-based image
define option CORTEXUPDATE	# Cortex CD update build file
define option YUKON		# Yukon normal rom-based image
define option YUKONUPDATE	# Yukon CD update build file
define option YUKONA		# YUKONA rom-based image
define option YUKONAUPDATE	# YUKONA CD update image
define option WILDFIRE		# WildFire ROM image
define option WFDIAG		# WildFire srom/xsrom
define option WFMIN		# WildFire min image(I/O through EV serial port)
define option WFUPDATE		# WildFire update image
define option WFLOAD		# WildFire big image
define option MARVEL		# Marvel ROM image
define option PRIVATEER		# Privateer ROM image
define option PRMIN		# Privateer min image (I/O through EV serial port)
define option PRUPDATE		# Privateer update image
define option PRLOAD		# Privateer big image
define option FALCON		# Falcon ROM image
define option FALMIN		# Falcon min image (I/O through EV serial port)
define option FALUPDATE		# Falcon update image
define option FALLOAD		# Falcon big image

#
# Architecture options
#
define option ALPHA
define option VAX
define option EV5
define option EV6
define option BWX		# support for byte/word architecture extensions
define option FRU5		# indicates FRU5 (galaxy) fru tables
define option GCT6

#
# Miscellaneous options
#
define option FWUPDATE		 # fw update target
define option NO_LFU_FLOPPY	 # Don't look on a floppy for options fw
define option ARC_SUPPORT	 #
define option BACKING_STORE	 # graphics drivers use backing store for text
define option IO_BUS_RESET	 # platform supports io bus resets
define option BOOT_RESET	 # platform supports BOOT_RESET envar
define option CONSOLE_DRIVER	 #
define option DIAG_SUPPORT	 #
define option DE200		 #
define option EXTRA		 # Include extra stuff.
define option HIGH_BOOT_PTEPAGES # Put boot page tables in high memory
define option IMP		 # for Rawhide
define option INTERACTIVE_SCREEN #
define option MODE64		 # Full 64 bit mode.
define option MODULAR		 # Modular console
define option MSCP		 # client MSCP support
define option MSCP_SERVER	 # server MSCP support
define option RELEASE		 # This is a release version (?)
define option SCAM		 #
define option TGA		 #
define option FULL_TGA		 #
define option TGA_VMS_BUILD	 #
define option UNIPROCESSOR	 # obsolete
define option VALIDATE		 # Build "checked" version of code.
define option XDELTA_ON		 # Turn XDELTA on.
define option XDELTA_INITIAL	 # Modular, take initial Bpt
define option RUNS_ON_EISA	 # EISA based system
define option BOOTP_SUPPORT      # Turn on BOOTP, need to build inet driver
define option SYMBOLS		 # Turn on Symbols, need to build vlist
define option SIM		 # Simulation mode
define option ISP		 # Turbo ISP model
define option ISP_MODEL_SUPPORT  # ISP model support
define option SPORT		 # SPORT environment
define option FORCE		 # Force errors in diagnostics
define option STARTSHUT		 # Driver Startup and Shutdown
define option DRIVERSHUT	 # PB based Driver Startup and Shutdown
define option DYNAMIC_TRAPPING	 # Trap on malloc/free
define option DYNAMIC_PRINTING	 # Trace malloc/free requests 
define option NONZERO_CONSOLE_BASE
define option NET_EI_PORT	 # PCI Intel ETHERNET
define option NET_EW_PORT	 # PCI Tulip ETHERNET
define option NET_PDQ_PORT	 # PCI FDDI
define option NET_FW_PORT	 # PCI FDDI
define option NET_EX_PORT	 # DEMNA
define option NET_FX_PORT	 # DEMFA
define option NET_FF_PORT	 # DEFAA
define option GALAXY
define option SHOW_RAID
define option ARC_CCI
define option FIBRE_CHANNEL      # Fibre Channel support
define option UNIVERSE		 # New Tundra chip for YUKONA 
define option GALAXY_CALLBACKS
define option EEROM_CALLBACKS
define option NT_ONLY_SUPPORT
define option USB_SUPPORT
define option LOG_DRIVER_INIT
define option SEPARATE_PAGE_TABLES
define option CPQPHPC		 # CPQ Hot-plug controller (Yukon)
define option BOOTBIOS		 # platform supports booting thru BIOS ROM's

# breaks kernel_alpha.mar
# define option MACRO64$		 # Macro 64 compiles
#
#
# Values
#
define value MAX_PROCESSOR_ID	1
define value MIN_HEAP_SIZE	0x18000		# 96K
define value HEAP_SIZE		0x100000	# 1024K
define value HEAP_BASE		0
define value MAX_MEMORY_CHUNK	1
define value MAX_MEMORY_ARRAY	1
define value MEMORY_CLUSTER_COUNT	11

define value DEFAULT_PSEC_PER_CYCLE 2000
define value DISCRETETIMER_BASE 0x4000
define value ENET_ID_BASE	0x3800
define value EEROM_LENGTH	8192
define value NVRAM_EV_LEN	2048
define value MAX_ELBUF		8192
define value MAX_RECALL		16
define value RTC_BASE		0x8000
define value RTC_OFFSET_REG	0x70
define value RTC_DATA_REG	0x71
define value MAX_GRAPHICS	1
define value MAX_PHYSMEM_MB	(2*1024)
#
# Regular expressions for suppressing undefined options during option
# scanning (see OPT.MMS).
#
suppress option /DEBUG/
suppress option /TRACE/

#
# Messages
#
message file generic_messages.c

message prefix msg_

message value msg_success	0
message value msg_failure	1
message value msg_def		2
message value msg_halt		3
message value msg_loop		4
message value msg_error		5
# end include of cp$src:options.bld (depth 2)

platform LX164
architecture ALPHA

option EV5
option BWX
option APC_PLATFORM
option TGA 1
option FULL_TGA 0
option SECURE
option BOOTP_SUPPORT
option DIAG_SUPPORT
option SYMBOLS 0
option XDELTA_ON 0
option HIGH_BOOT_PTEPAGES 1
option BACKING_STORE

value MAX_MEMORY_CHUNK		2
value MAX_ELBUF			8192
value HEAP_SIZE			720896
value EEROM_BASE		983040
value EEROM_LENGTH		65536
value DEFAULT_PSEC_PER_CYCLE	2000

file	alphamm.c			group base
file	ansi.c				group base
file	aputchar.c			group base
file	atoi.c				group base
#
# There are two shells available, a full featured Bourne shell (blex.c),
# and a minimal command line tokeninzer (ash.c).  Pick only one.
#
file	blex.c				group base
file	bshell.c			group base
file	bshell_cmd.c			group base
#
file	boot.c				group base
file	builtins.c			group base
file	call_backs.c			group base
file	callbacks_alpha.mar	
file	date.c				group base
file	dynamic.c			group base
file	entry.c				group base
file	ev_action.c			group base
file	exdep.c				group base
file	externdata.c			group base
file	filesys.c			group base
file	hwrpb.c				group base
file	hwrpbtt_driver.c		group driver
file	ie.c				group base
file	iobq_cmd.c			group base
file	isacfg.c			group base
file	isp1020_edit.c			group base
file	kernel.c			group base
file	kernel_support.c		group base
file	kernel_alpha.mar		group base
file	memset.c			group base
file	mopdl_driver.c			group driver
file	moplp_driver.c			group driver
file	msgtxt.c			group data
file	ni_datalink.c			group driver
file	pke_driver.c			group driver
file	pke_script.mar
file	printf.c			group base
file	probe_io.c			group base
file	process.c			group base
file	qscan.c				group base
file	queue.c				group base
file	random.c			group base
file	readline.c			group base
file	regexp.c			group base
file	scsi.c				group driver
file	semaphore.c			group base
file	show_hwrpb.c			group base
file	show_map.c			group base
file	setshow.c			group base
file	shellsort.c			group base
file	startstop.c			group base
file	strfunc.c			group base
file	timer.c				group base
file	uptime.c			group base
file    xcmd.c				group base   
file	xlate.c				group base
#
# Platform-specific files
#
file	lx164.c				group base
file    lx164_init.c			group base
file    lx164_mcheck.c			group base
file    lx164_io.c			group base
file	lx164_util.mar
file	memconfig_lx164.c		group base
file	powerup_lx164.c			group base
file	show_config_lx164.c		group base
file	ebflash_support.c		group driver
#
# Files needed for the extended command set
# 
file	allocfree.c
file	bpt.c
file	cat.c
file	check.c
file	chmod.c
file	cmp.c
file	decode_alpha.c
file	diag_support.c
file	diag_evs.c
file	echo.c
file	edit.c
file	eval.c
file	exer.c
file	find_field.c
file	grep.c
file	hd.c
file	help.c
file	inst_alpha.mar
file	line.c
file	login_cmd.c
file	ls.c
file	moprc_driver.c
file	moprctt_driver.c
file	more.c
file	net.c
file	ps.c
file	rm.c
file	secure.c
file	sem_cmd.c
file    simport.c
file	sleep.c
file	sort.c
file	sound.c
file 	symbols.c
file	tms380fw.c
file	tr.c
file	truefalse.c
file	validate.c
file	wc.c
#
# Option Files 
#
file    tga_driver_port.c		group 0
file   	tga_driver_stip.c		group 0
file   	tga_driver_bt485.c		group 0
file   	tga_driver_bt463.c		group 0
file   	tga_driver_visual.c		group 0
file   	tga_driver_support.c		group 0
file   	tga_driver_busio.c		group 0
#
# Xdelta Debugger
#
#file	xdelta.mar
#file	xdelta_isrs.mar
#
# Memory and Network Diagnostics
#
file	memtest.c		
file	memtest_gray_lw.c
file	memtest_alpha.mar	
file	memtest_march.c
file	memtest_random.c
file	memtest_victim.c
file	nettest.c	
#
# TGA Diagnostics
#
#file	tga_driver_copy.c
#file	tga_driver_line.c
#
#file   tga_test.c
#file	tga_test_bool.c
#file	tga_test_box.c
#file	tga_test_chair.c
#file	tga_test_cnfg.c
#file	tga_test_copy.c
#file	tga_test_edit.c
#file	tga_test_flash.c
#file	tga_test_font.c
#file	tga_test_init.c
#file	tga_test_int.c
#file	tga_test_line.c
#file	tga_test_pack.c
#file	tga_test_patt.c
#file	tga_test_plane.c
#file	tga_test_pshift.c
#file	tga_test_reg.c
#file	tga_test_simz.c
#file	tga_test_stip.c
#file	tga_test_vdac_463.c  
#file	tga_test_vdac_485.c
#file	tga_test_verify.c
#file	tga_test_vram.c
#file	tga_test_stereo.c
#file	tga_version.c
#
# Driver Initialization
#
# Lines that have a name in column 0 and a value as the second
# field are entered into the Driver Startup Table (dst).  The 
# second field indicates what phase the driver is started in.
#
# Start up the phase 0 drivers:
# Initialize the TOY driver and low level stuff that must be 
# started at this point.
#
driver	nl_driver.c		0	group driver
driver	rd_driver.c		0	group driver
driver 	toy_driver.c		0	group driver
#
# Start up the phase 1 drivers:
#
driver	pci_driver.c		1	group driver
driver	from_driver.c		1	group driver
driver	nvram_driver.c		1	group driver
#
# Start up the phase 3 drivers:
# Terminal class driver must start before the terminal port drivers.
# kbd_driver MUST be started after graphics drivers & before serial port driver
#
driver	tt_driver.c     	3	group driver
driver	tga_driver.c		3	group driver
driver	vga_bios_driver.c	3	group driver
driver  kbd_driver.c		3	group driver
driver	combo_driver.c		3	group driver
#
# Start up the phase 4 drivers:
# Event Driver must start after console initialization done
#
driver	ev_driver.c     	4	group driver
driver	el_driver.c		4	group driver
driver	pmem_driver.c		4	group driver
driver	vmem_driver.c		4	group driver
driver	examine_driver.c	4	group driver
driver	ev5_ipr_driver.c	4	group driver
driver	gpr_driver.c    	4	group driver
driver	pt_driver.c     	4	group driver
driver	ps_driver.c     	4	group driver
driver	ndbr_driver.c		4	group driver
driver	mop_driver.c		4	group driver
driver	fpr_driver.c    	4	group driver
driver	pi_driver.c		4	group driver
driver	decode_driver.c		4	group driver
driver  tee_driver.c		4	group driver
#
# Start up the phase 5 drivers:
#
driver	para_driver.c		5	group driver
driver	inet_driver.c 		5	group driver
driver	fat_driver.c		5	group driver
#
# IDE/ATAPI driver
#
driver	dq_driver.c		5	group driver
#
# ISA ethernet driver for adapter with the LEMAC chip
#
driver	de205_driver.c 		5	group driver
#
# Floppy diskette driver 
#
driver	dv_driver.c		5	group driver
#
# SCSI bus poller for NCR/Symbios 810/875 controllers
#
driver	n810_driver.c		5	group driver
#
# PCI NVRAM Driver
#
driver  pci_nvram_driver.c      5       group driver
#
# PCI FDDI driver for the DEFPA adapter
#
driver  pdq_driver.c            5       group driver
#
# PCI Token ring driver
#
driver  dw_driver.c             5       group driver
#
# PCI SCSI RAID driver for the Mylex DAC960 adapter
#
driver dac960_driver.c          5       group driver
#
# PCI SCSI driver for the KZPSA adapter
#
driver pks_driver.c             5       group driver
#
# SCSI driver for adapters employing Qlogic ISP1020 chips
#
driver isp1020_driver.c		5       group driver
#
# PCI ethernet driver for the DECchip 2104x/2114x adapters
#
driver ew_driver.c		5       group driver
#
# Intel 82558 ethernet adapter
#
driver	ei_driver.c		5	group driver
#
# SCSI driver for Adaptec AIC78xx adapters
#
driver	aic78xx_driver.c	5	group driver
file	aic78xx_him_hwm.c		group driver
file	aic78xx_him_rsm.c		group driver
file	aic78xx_him_xlm.c		group driver
#
# The built in file system.
#
# Encapsulated files are taken from their VMS sources and put 
# directly into the firmware's file system as a named file.  
# To add a new file, use the keyword "encapsulate", the VMS 
# filename, and the name you want the file to have in the 
# firmware.
#
#
# Corporate FW CD Update Utility Scripts
#
encapsulate	cp$src:eb_fwupdate	fwupdate	 ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
#
# ISA configuration scripts to facilitate adding known devices
#
encapsulate	cp$src:isacfg_de205	add_de205	 ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
#
# Diagnostic scripts
#
encapsulate	cp$src:test_eb164	test		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE	-script
encapsulate	cp$src:memexer_eb164	memexer		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
encapsulate	cp$src:sys_exer_eb164	sys_exer	ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
encapsulate	cp$src:floppy_eb164	floppy		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE	-script
encapsulate     cp$src:floppy_write     floppy_write    ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
encapsulate	cp$src:network_eb164	network		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE	-script
encapsulate	cp$src:exer_read	exer_read	ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE	-script
encapsulate	cp$src:exer_write	exer_write	ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE	-script
encapsulate	cp$src:tgax             tgax		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
encapsulate	cp$src:show_status	show_status	ATTR$M_READ|ATTR$M_EXECUTE	-script
encapsulate	cp$src:kill_diags_eb164 kill_diags	ATTR$M_READ|ATTR$M_EXECUTE	-script
encapsulate     cp$src:showit           showit          ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
encapsulate	cp$src:dqtest		dqtest		ATTR$M_READ|ATTR$M_WRITE|ATTR$M_EXECUTE -script
#
# When you want the symbol table driver in your image, you have to have
# the driver itself, the variable list (i.e. the symbol table), and
# a list of symbols that you want included/excluded.  The inclusion
# exclusion commands take as arguments regular expressions that are
# applied to the symbol table.
#
# NOTE: regular expressions are AWK style regular expressions, which
# are NOT the same as regular expressions in other contexts!
#
#driver	sym_driver.c		0
#file	vlist.c
#sym_include	[a-zA-Z0-9_\$]+
#sym_exclude	vlist msg_.*
# end include of cp$src:lx164_files.bld (depth 1)
configuration LXUPDATE
option FWUPDATE

file    lfu.c				group command
file    lfu_support_apc.c		group base
#
# Lfu drivers are started by lfu.. phase 7
#
driver	lfu_lx164_driver.c	 7	group driver
driver	lfu_kzpsa_driver.c	 7	group driver
driver	lfu_defpa_defea_driver.c 7	group driver
#
driver	iso9660_driver.c	 5	group driver
#
# start this last!!!!
#
driver	lfu_startup_driver.c	 5	group base
#
encapsulate	cp$src:sx164_readme		readme		ATTR$M_READ|ATTR$M_EXECUTE	-script
encapsulate	cp$src:save_nvram_lx164		save_nvram	ATTR$M_READ|ATTR$M_EXECUTE	-script
encapsulate	cp$src:restore_nvram_lx164	restore_nvram	ATTR$M_READ|ATTR$M_EXECUTE	-script
#
# These files are not needed
#
delete file cp$src:test_eb164
delete file cp$src:sys_exer_eb164
delete file cp$src:memexer_eb164
delete file cp$src:floppy_write
delete file cp$src:show_status
delete file cp$src:kill_diags_eb164
delete file cp$src:showit
delete file nettest.c
delete file memtest.c
delete file memtest_gray_lw.c
delete file memtest_alpha.mar
delete file memtest_march.c
delete file memtest_random.c
delete file memtest_victim.c
delete file isp1020_edit.c
delete file exer.c
delete file help.c
delete file net.c
# end include of  (depth 0)
