{ Copyright (c) 1996 by
{ Digital Equipment Corporation, Maynard, Massachusetts.
{ All rights reserved.
{
{ This software is furnished under a license and may be used and copied
{ only  in  accordance  of  the  terms  of  such  license  and with the
{ inclusion of the above copyright notice.  This software or any  other
{ copies thereof may not be provided or otherwise made available to any
{ other person.  No title to and  ownership of the  software is  hereby
{ transferred.
{
{ The information in this software is  subject to change without notice
{ and  should  not  be  construed  as a commitment by Digital Equipment
{ Corporation.
{
{ Digital assumes no responsibility for the use  or  reliability of its
{ software on equipment which is not supplied by Digital.
{
{
{ Abstract:
{   This definition file contains all of the main register definitions for
{   pyxis.
{
{ Author:
{   Jim Delmonico
{
{ Creation Date: 10-jun-96
{
{ Modification History:
{
{       10-jun-96  jjd -- updated to reflect the way pyxis was actually
{                       implemented and released for fabrication.
{                       Based in some CIA SDL stuff.
{
MODULE pyxis_main_csr_def IDENT "x0.1";

iflanguage cc
literal;

#ifndef	PYXIS_MAIN_CSR_DEF
#define PYXIS_MAIN_CSR_DEF 1

end_literal;
end_iflanguage cc;

/*
/* The following is the base address of the system configuration registers in
/* the PYXIS.  This value must be shifted left 28 places to yield the proper
/* value, thus simplifying the load of the address into registers.
/*
CONSTANT pyxis_k_main_csr_base EQUALS %X874;	/* sysconfig base
CONSTANT pyxis_v_main_csr_base EQUALS 28;		/* sysconfig base extent

/*
/* PCI configuration register 
/*

CONSTANT cfgtype0 EQUALS %x0 PREFIX pci_; 
CONSTANT cfgtype1 EQUALS %x1 PREFIX pci_; 

AGGREGATE PYXIS_PCI_CFG UNION
    PREFIX cfg_;

    by_field STRUCTURE;
	cfg_type BITFIELD LENGTH 2-^ MASK;
	unused_0 BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;

END PYXIS_PCI_CFG;

	
/*
/*  PYXIS flash ctrl
/*
/* FLASH CONTROL REGISTER

aggregate PYXIS_FLASH union fill prefix pyxis_flash_;
    displacement byte dimension 64;	/* space used by this register
    whole longword;
    field structure fill;
      wp_width bitfield length 4-^ mask;	/* [3:0]
      disable_time bitfield length 8-^ mask;	/* [7:4]
      access_time bitfield length 12-^ mask;	/* [11:8]
      low_enable bitfield mask length 13-^;	/* [12]
      high_enable bitfield mask length 14-^;	/* [13]
      ctrl_reserved1 bitfield mask length 32-^;	/* [31:14]
    end field;
end PYXIS_FLASH;


/*
/* PYXIS Control Register 
/*
/* suggested value is ??
/*
AGGREGATE PYXIS_CTRL union fill prefix pyxis_ctrl_;
    displacement byte dimension 64;	/* space used by this register
    whole longword;
    field structure fill;
	pci_en bitfield mask length 1-^;	/* [0]
	reserved_1 bitfield mask length 2-^;	/* [1]
	pci_loop_en bitfield mask length 3-^;	/* [2]
	fst_bb_en bitfield mask length 4-^;	/* [3]
	pci_mst_en bitfield mask length 5-^;	/* [4]
	pci_mem_en bitfield mask length 6-^;	/* [5]
	pci_req64_en bitfield mask length 7-^;	/* [6]
	pci_ack64_en bitfield mask length 8-^;	/* [7]
	addr_pe_en bitfield mask length 9-^;	/* [8]
	perr_en bitfield mask length 10-^;	/* [9]
	fillerr_en bitfield mask length 11-^;   /* [10]
	mchkerr_en  bitfield mask length 12-^;	/* [11]
	ecc_chk_en bitfield mask length 13-^;	/* [12]
	assert_idle_bc bitfield mask length 14-^;	/* [13]
	reserved_2 bitfield mask length 20-^;	/* [14-19]
	rd_type bitfield mask length 22-^;	/* [20:21]
	rd_use_history bitfield mask length 23-^;	/* [22]
	reserved_3 bitfield mask length 24-^;	/* [23]
	rl_type bitfield mask length 26-^;	/* [24:25]
	rl_use_history bitfield mask length 27-^;	/* [26]
	reserved_4 bitfield mask length 28-^;	/* [27]
	rm_type bitfield mask length 30-^;	/* [28:29]
	rm_use_history bitfield mask length 31-^;	/* [30]
	reserved_5 bitfield mask length 32-^;	/* [31]
    end field;
end PYXIS_CTRL;	

/* PYXIS Control Register 
/*
/* suggested value is ??
/*
AGGREGATE PYXIS_CTRL1 union fill prefix pyxis_ctrl1_;
    displacement byte dimension 64;	/* space used by this register
    whole longword;
    field structure fill;
	ioa_ben bitfield mask length 1-^;	/* [0]
	reserved_1 bitfield mask length 4-^;	/* [3:1]
	pci_mwin_en bitfield mask length 5-^;	/* [4]
	reserved_2 bitfield mask length 8-^;	/* [7:5]
	pci_link_en bitfield mask length 9-^;	/* [8]
	reserved_3 bitfield mask length 12-^;	/* [9:11]
	lw_par_mode bitfield mask length 13-^;	/* [12]
	reserved_4 bitfield mask length 32-^;	/* [31]
    end field;
end PYXIS_CTRL1;	

/*
/* Hardware Address extension register for memory
/*
AGGREGATE PCI_HAE_MEM UNION 
    PREFIX haemem_;

    by_field STRUCTURE;
	unused_0 BITFIELD LENGTH 2-^ MASK;	/* [1:0]
	addr_ext_3 BITFIELD LENGTH 8-^ MASK;	/* [7:2]
	unused_1 BITFIELD LENGTH 11-^ MASK;	/* [10:8]
	addr_ext_2 BITFIELD LENGTH 16-^ MASK;	/* [15:11]
	unused_2 BITFIELD LENGTH 29-^ MASK;	/* [28:16]
	addr_ext_1 BITFIELD LENGTH 32-^ MASK;	/* [31:29]
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;

END PCI_HAE_MEM;

/*
/* Hardware Address extension register for I/O
/*
AGGREGATE PCI_HAE_IO UNION 
    PREFIX haeio_;

    by_field STRUCTURE;
	unused_0 BITFIELD LENGTH 25-^ MASK;	/* [24:0]
	addr_ext BITFIELD LENGTH 32-^ MASK;	/* [31:25]
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;

END PCI_HAE_IO;


/*
/* PCI latency register
/* 
AGGREGATE PCI_LAT UNION 
    PREFIX pci_lat_;

    by_field STRUCTURE;
	unused_0 BITFIELD LENGTH 8-^ MASK;
	latency BITFIELD LENGTH 16-^ MASK;
	unused_1 BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;

END PCI_LAT;

/*
/* PYXIS diagnostic Force Error register
/* 
CONSTANT (none,
	  lo_lwrd,
	  hi_lwrd,
	  addr) EQUALS %x0 INCREMENT %x10000000 PREFIX pci_err_;

AGGREGATE PYXIS_DIAG UNION 
    PREFIX pyxis_diag_;
    by_field STRUCTURE;
	unused_0 BITFIELD LENGTH 1-^ MASK;	/* [0]
	use_check BITFIELD LENGTH 2-^ MASK;	/* [1]
	unused_1 BITFIELD LENGTH 28-^ MASK;	/* [27:2]
	fpe_pci_low BITFIELD LENGTH 29-^ MASK;	/* [28]
	fpe_pci_hi BITFIELD LENGTH 30-^ MASK;	/* [29]
	unused_2 BITFIELD LENGTH 31-^ MASK;	/* [30]
	fpe_to_ev5 BITFIELD LENGTH 32-^ MASK;	/* [31]
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_DIAG;

/*
/* Diagnostic Check bit register
/* 
AGGREGATE DIAG_CHECK UNION 
    PREFIX diag_check_;

    by_field STRUCTURE;
	ecc BITFIELD LENGTH 8-^ MASK;
	unused_0 BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;

END DIAG_CHECK;


/*
/* Performance Monitor register - 0x8740004000 
/*
AGGREGATE PYXIS_PERFMON UNION
    PREFIX perfm_;
    
    by_field STRUCTURE;
	low_cnt BITFIELD LENGTH 16-^ MASK;
	high_cnt BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_PERFMON;

/*
/* Performance Monitor Control register - 0x8740004040 
/*


AGGREGATE PYXIS_PERFCTL UNION
    PREFIX perfc_;
    
    by_field STRUCTURE;
	low_sel BITFIELD LENGTH 8-^ MASK;
	unused_0 BITFIELD LENGTH 12-^ MASK;
	low_cnt_cyc BITFIELD LENGTH 13-^ MASK;
	low_cnt_clr BITFIELD LENGTH 14-^ MASK;	    /* write only bit
	low_err_stop BITFIELD LENGTH 15-^ MASK;
	low_cnt_strt BITFIELD LENGTH 16-^ MASK;
	high_sel BITFIELD LENGTH 19-^ MASK;
	unused_1 BITFIELD LENGTH 28-^ MASK;
	high_cnt_cyc BITFIELD LENGTH 29-^ MASK;	    
	high_cnt_clr BITFIELD LENGTH 30-^ MASK;	    /* write only bit
	high_err_stop BITFIELD LENGTH 31-^ MASK;
	high_cnt_strt BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_PERFCTL;

/*
/* PYXIS Revision register
/* 
AGGREGATE PYXIS_REV UNION 
    PREFIX pyxis_rev_;

    by_field STRUCTURE;
	revision BITFIELD LENGTH 8-^ MASK;
	is_pyxis BITFIELD LENGTH 9-^ MASK;
	unused_1 BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_REV;

/*
/* PYXIS error register
/* 
AGGREGATE PYXIS_ERR UNION 
    PREFIX pyxis_err_;

    by_field STRUCTURE;
        cor_err bitfield mask;
        un_cor_err bitfield mask;
        cpu_pe bitfield mask;
        mem_nem bitfield mask;
        pci_serr bitfield mask;
        pci_perr bitfield mask;
        pci_addr_pe bitfield mask;
        rcvd_mas_abt bitfield mask;
        rcvd_tar_abt bitfield mask;
        pa_pte_inv bitfield mask;
        pyxis_err_reserved1 bitfield;
        ioa_timeout bitfield mask;
        pyxis_err_reserved2 bitfield length 16-^;
        lost_cor_err bitfield mask;
        lost_un_cor_err bitfield mask;
        lost_cpu_pe bitfield mask;
        lost_mem_nem bitfield mask;
        pyxis_err_reserved3 bitfield;
        lost_perr bitfield mask;
        lost_pci_addr_pe bitfield mask;
        lost_rcvd_mas_abt bitfield mask;
        lost_rcvd_tar_abt bitfield mask;
        lost_pa_pte_inv bitfield mask;
        pyxis_err_reserved4 bitfield;
        lost_ioa_timeout bitfield mask;
        pyxis_err_reserved5 bitfield length 31-^;
        err_valid bitfield mask;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_ERR;


/*
/* PYXIS stat register
/*

AGGREGATE PYXIS_STAT UNION 
    PREFIX pyxis_stat_;

    by_field STRUCTURE;
      pci_status_0 bitfield mask;
      pci_status_1 bitfield mask;
      reserved1 bitfield length 4-^;
      ioa_valid_3_0 bitfield length 8-^ mask;
      reserved2 bitfield length 11-^;
      tlb_miss bitfield mask;
      reserved3 bitfield length 32-^;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_STAT;

/*
/* PYXIS err mask register
/* 
AGGREGATE PYXIS_ERR_MASK UNION
    PREFIX pyxis_err_mask_;

    by_field STRUCTURE;
      cor_err bitfield mask;
      un_cor_err bitfield mask;
      cpu_pe bitfield mask;
      mem_nem bitfield mask;
      pci_serr bitfield mask;
      perr bitfield mask;
      pci_addr_pe bitfield mask;
      rcvd_mas_abt bitfield mask;
      rcvd_tar_abt bitfield mask;
      pa_pte_inv bitfield mask;
      reserved1 bitfield length 11-^;
      ioa_timeout bitfield mask;
      reserved2 bitfield length 32-^;
      end by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_ERR_MASK;

/*
/* PYXIS Syndrome register
/* 
AGGREGATE PYXIS_SYND UNION 
    PREFIX pyxis_synd_; 

    by_field STRUCTURE;
      err_synd0 bitfield length 8-^ mask;
      err_synd1 bitfield length 16-^ mask;
      raw_check_bits bitfield length 24-^ mask;
      corr_err0  bitfield  mask;
      corr_err1  bitfield  mask;
      uncorr_err0  bitfield  mask;
      uncorr_err1  bitfield  mask;
      reserved1 bitfield length 32-^;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 8;
END PYXIS_SYND;


/*
/* PYXIS error data register
/* 
AGGREGATE PYXIS_ERR_DATA UNION 
    PREFIX pyxis_err_data_;

    by_field STRUCTURE;
	data BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_ERR_DATA;

/*
/* PYXIS mem err addr register
/* 
AGGREGATE PYXIS_MEAR UNION 
    PREFIX pyxis_mear_;

    by_field STRUCTURE;
      mear_reserved bitfield length 4-^;
      mem_port_addr_31_4 bitfield length 32-^ mask;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_MEAR;

/*
/* PYXIS mem err stat register
/* 
AGGREGATE PYXIS_MESR UNION 
    PREFIX pyxis_mesr_;

    by_field STRUCTURE;
     mem_adr_39_32 bitfield length 8-^ mask;
     dma_rd_nxm bitfield mask;
     dma_wr_nxm bitfield mask;
     cpu_rd_nxm bitfield mask;
     cpu_wr_nxm bitfield mask;
     io_rd_nxm bitfield mask;
     io_wr_nxm bitfield mask;
     victim_nxm bitfield mask;
     tlbfill_nxm bitfield mask;
     oword_index  bitfield length 18-^ mask;
     reserved1 bitfield length 20-^;
     data_cycle_type  bitfield length 25-^ mask;
     seq_state bitfield length 32-^ mask;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_MESR;

/*
/* PYXIS PCI_ERR0 register
/* 
AGGREGATE PYXIS_PCI_ERR0 UNION 
    PREFIX pyxis_pci_err0_;

    by_field STRUCTURE;
     dma_cmd bitfield length 4-^ mask;
     reserved1 bitfield;
     dma_dac bitfield mask;
     reserved2 bitfield length 8-^;
     window bitfield length 12-^ mask;
     reserved3 bitfield length 16-^;
     master_state bitfield length 20-^ mask;
     target_state bitfield length 24-^ mask;
     reserved4 bitfield;
     pci_cmd bitfield length 28-^ mask;
     pci_dac bitfield mask;
     reserved5 bitfield length 32-^;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_PCI_ERR0;

/*
/* PYXIS PCI error 1 register
/* 
AGGREGATE PYXIS_PCI_ERR1 UNION 
    PREFIX pyxis_pci_err1_;

    by_field STRUCTURE;
	data BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_pci_err1;

/*
/* PYXIS PCI error 2 register
/* 
AGGREGATE PYXIS_PCI_ERR2 UNION 
    PREFIX pyxis_pci_err2_;

    by_field STRUCTURE;
	data BITFIELD LENGTH 32-^ MASK;
    END by_field;
    whole LONGWORD;
    displacement BYTE DIMENSION 64;
END PYXIS_PCI_ERR2;



/*
/*  PYXIS Main CSR .....
/*
/*  This block of registers contains at all of the registers modelled in the
/*  structures above in the address space order in which they will appear on the
/*  machine.
/*
aggregate PYXIS_MAIN_CSR structure prefix csr_;
    offset byte DIMENSION %x80-:;
    pyxis_rev PYXIS_REV;		/* PYXIS revision - 0x80
    pci_lat PCI_LAT;		/* PCI latency - 0xc0
    pyxis_ctrl PYXIS_CTRL;		/* PYXIS control - 0x100
    pyxis_ctrl1 PYXIS_CTRL1;		/* PYXIS control - 0x100
    offset_1 byte DIMENSION %x200-:;
    pyxis_flash PYXIS_FLASH;		/* PYXIS config - 0x200
    offset_2 byte DIMENSION %x400-:;
    hae_mem PCI_HAE_MEM;	/* MEM HAE - 0x400    
    hae_io PCI_HAE_IO;		/* IO HAE -  0x440
    cfg PYXIS_PCI_CFG	;		/* PCI Config - 0x480
    offset_4 byte DIMENSION %x2000-:;
    pyxis_diag PYXIS_DIAG;		/* PYXIS Force error register - 0x2000
    offset_5 byte DIMENSION %x3000-:;
    diag_check DIAG_CHECK;	/* Diagnostic Check bit - 0x3000
    offset_6 byte DIMENSION %x4000-:;
    pyxis_perf_mon PYXIS_PERFMON;	/* Performance Monitor Ctr - 0x4000
    pyxis_perf_cntl PYXIS_PERFCTL;	/* Performance monitor Ctl - 0x4040
    offset_7 byte DIMENSION %x8200-:;
    pyxis_err PYXIS_ERR;		/*pyxis err 0x8200
    pyxis_stat PYXIS_STAT;		/*pyxis stat 0x8240
    pyxis_err_mask PYXIS_ERR_MASK;	/*pyxis err mask 0x8280
    offset_8 byte DIMENSION %x8300-:;
    pyxis_synd PYXIS_SYND;		/*pyxis synd 0x8300
    pyxis_err_data PYXIS_ERR_DATA;	/*pyxis err_data 0x8308
    offset_9 byte DIMENSION %x8400-:;   
    pyxis_MEAR PYXIS_MEAR;		/*pyxis mear 0x8400
    pyxis_mesr PYXIS_MESR;		/*pyxis MESR 0x8440
    offset_B byte DIMENSION %x8800-:;   
    pyxis_pci_err0 PYXIS_PCI_ERR0;	/*pyxis_pci_err0  0x8800
    pyxis_pci_err1 PYXIS_PCI_ERR1;	/*pyxis_pci_err0  0x8840
    pyxis_pci_err2 PYXIS_PCI_ERR2;	/*pyxis_pci_err0  0x8880
end PYXIS_MAIN_CSR;		

iflanguage cc
literal;

#endif
end_literal;
end_iflanguage cc;

END_MODULE pyxis_main_csr_def;
